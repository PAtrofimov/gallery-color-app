{"version":3,"sources":["api/StorageService.js","store/reducers/color/action-types.js","middleware/localStorageMiddleware.js","store/reducers/color/index.js","store/reducers/user/action-types.js","store/reducers/user/index.js","store/reducers/index.js","store/index.js","components/Header.js","components/LeftMenu.js","layouts/Main.js","data/colors.js","api/ColorService.js","store/reducers/color/action-creators.js","store/reducers/user/action-creators.js","store/reducers/action-creators.js","hooks/index.js","pages/AddColor.js","utils/index.js","selectors/index.js","components/Star.js","components/Stars.js","pages/Color.js","pages/Colors.js","pages/Error.js","pages/UpdateColor.js","routes/index.js","components/AppRouter.js","App.js","index.js"],"names":["storageName","StorageService","JSON","parse","sessionStorage","getItem","state","setItem","stringify","SET_COLORS","SET_ISLOADING","SET_ERROR","ADD_COLOR","EDIT_COLOR","REMOVE_COLOR","SET_RATING","localStorageMiddleware","getState","next","action","result","includes","type","set","console","log","store","initialState","colors","isLoading","error","SET_ADMIN","isAdmin","color","payload","id","String","Date","now","name","description","rate","newColors","map","col","rating","filter","user","rootReducer","combineReducers","reducers","createStore","applyMiddleware","thunk","Header","className","href","LeftMenu","hidden","htmlFor","to","activeClassName","Main","children","role","ColorService","Promise","resolve","setTimeout","ColorActionCreators","setColors","setError","setIsLoading","addColor","editColor","removeColor","setRating","fetchColors","dispatch","a","get","length","UserActionCreators","setIsAdmin","allActionCreators","useActions","useDispatch","bindActionCreators","validationSchema","Yup","shape","min","required","max","AddColor","router","useHistory","formik","useFormik","initialValues","onSubmit","values","actions","resetForm","handleSubmit","placeholder","value","onChange","handleChange","onBlur","handleBlur","touched","errors","rows","onClick","e","push","RouteNames","COLORS","averageFromArray","array","averageRating","Math","round","reduce","prev","cur","generateArrayAndReverse","number","Array","fill","_","index","reverse","selectColors","selectColorsWithId","createSelector","acc","selectColorById","colorId","selectIdColors","selectColorWithAverageRatingById","Star","sid","disabled","onChangeParent","title","checked","defaultProps","Stars","React","Children","count","caption","classNames","Color","useSelector","stopPropagation","style","background","Colors","marginRight","marginBottom","Error","UpdateColor","search","useLocation","useMemo","URLSearchParams","useQuery","useParams","savedState","useState","setState","onChangeState","target","onChangeRating","preventDefault","window","confirm","COLORADMIN","COLOR","ADDCOLOR","UpdateColorWithMain","publicRoutes","path","render","exact","AppRouter","route","key","App","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.f49f3cd2.chunk.js","sourcesContent":["const storageName = \"galleryState\";\r\n\r\nexport default class StorageService {\r\n  static get() {\r\n    return JSON.parse(sessionStorage.getItem(storageName));\r\n  }\r\n  static set(state) {\r\n   sessionStorage.setItem(storageName, JSON.stringify(state));\r\n  }\r\n}\r\n","export const SET_COLORS = \"SET_COLORS\";\r\nexport const SET_ISLOADING = \"SET_ISLOADING\";\r\nexport const SET_ERROR = \"SET_ERROR\";\r\nexport const ADD_COLOR = \"ADD_COLOR\";\r\nexport const EDIT_COLOR = \"EDIT_COLOR\";\r\nexport const REMOVE_COLOR = \"REMOVE_COLOR\";\r\nexport const SET_RATING = \"SET_RATING\";\r\n","import StorageService from \"../api/StorageService\";\r\nimport { SET_COLORS, SET_ERROR, SET_ISLOADING } from \"../store/reducers/color/action-types\";\r\n\r\nconst localStorageMiddleware = ({ getState }) => {\r\n  return (next) => (action) => {\r\n    const result = next(action);\r\n    if (![SET_COLORS, SET_ERROR, SET_ISLOADING].includes(action.type)) {\r\n      StorageService.set(getState());\r\n      console.log(\"store \", {store: getState(), action});\r\n    }\r\n    return result;\r\n  };\r\n};\r\nexport default localStorageMiddleware;\r\n","import {\r\n  SET_COLORS,\r\n  ADD_COLOR,\r\n  EDIT_COLOR,\r\n  REMOVE_COLOR,\r\n  SET_RATING,\r\n  SET_ISLOADING,\r\n  SET_ERROR,\r\n} from \"./action-types\";\r\n\r\nconst initialState = {\r\n  colors: [],\r\n  isLoading: false,\r\n  error: \"\",\r\n};\r\n\r\nexport default function colorReducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case SET_COLORS:\r\n      return { ...state, colors: action.payload };\r\n    case SET_ISLOADING:\r\n      return { ...state, isLoading: action.payload };\r\n    case SET_ERROR:\r\n      return { ...state, error: action.payload, isLoading: false };\r\n    case ADD_COLOR:\r\n      return {\r\n        ...state,\r\n        colors: [...state.colors, { ...action.payload, id: String(Date.now()) }],\r\n      };\r\n    case EDIT_COLOR: {\r\n      const { id, name, description, color, rate } = action.payload;\r\n\r\n      const newColors = state.colors.map((col) => {\r\n        if (col.id === id) {\r\n          let rating = col.rating || [];\r\n          rating = rate ? [...rating, rate] : rating;\r\n          return { ...col, name, description, color, rating };\r\n        }\r\n\r\n        return col;\r\n      });\r\n\r\n      return { ...state, colors: newColors };\r\n    }\r\n    case REMOVE_COLOR: {\r\n      return {\r\n        ...state,\r\n        colors: state.colors.filter((color) => color.id !== action.payload),\r\n      };\r\n    }\r\n    case SET_RATING: {\r\n      const { id, rate } = action.payload;\r\n      const newColors = state.colors.map((col) => {\r\n        if (col.id === id) {\r\n          return { ...col, rating: [...state.colors.rating, rate] };\r\n        }\r\n\r\n        return col;\r\n      });\r\n\r\n      return { ...state, colors: newColors };\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","export const SET_ADMIN = \"SET_ADMIN\";","import { SET_ADMIN } from './action-types';\r\n\r\nconst initialState = {\r\n   isAdmin: false\r\n}\r\n\r\nexport default function userReducer(state = initialState, action) {\r\n\r\n   switch (action.type) {\r\n      case SET_ADMIN:\r\n         return { ...state, isAdmin: action.payload };\r\n      default:\r\n         return state;\r\n   }\r\n\r\n}\r\n","import color from \"./color\";\r\nimport user from \"./user\";\r\n// eslint-disable-next-line import/no-anonymous-default-export\r\nexport default {\r\n   color,\r\n   user,\r\n}","import {createStore, combineReducers, applyMiddleware} from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport localStorageMiddleware from '../middleware/localStorageMiddleware';\r\nimport reducers from './reducers'\r\n\r\nconst rootReducer = combineReducers(reducers)\r\n\r\nexport const store = createStore(rootReducer, applyMiddleware(thunk, localStorageMiddleware))","import React from \"react\";\r\n\r\nconst Header = () => {\r\n  return (\r\n    <header className=\"header\">\r\n      <h1 className=\"header__title\">\r\n        <a href=\"/\" className=\"header__logo\">\r\n          Colors Gallery\r\n        </a>\r\n      </h1>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nconst LeftMenu = () => {\r\n  return (\r\n    <>\r\n      <input type=\"checkbox\" id=\"nav-toggle\" hidden />\r\n      <nav className=\"nav\">\r\n        <label htmlFor=\"nav-toggle\" className=\"nav-toggle\"></label>\r\n        <h2>Menu</h2>\r\n        <ul>\r\n          <li>\r\n            <NavLink to=\"/\" activeClassName=\"active\">\r\n              Colors list\r\n            </NavLink>\r\n          </li>\r\n          <li>\r\n            <NavLink to=\"/add\" activeClassName=\"active\">\r\n              Add color\r\n            </NavLink>\r\n          </li>\r\n        </ul>\r\n      </nav>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default LeftMenu;\r\n","import React from \"react\";\r\nimport Header from \"../components/Header\";\r\nimport LeftMenu from \"../components/LeftMenu\";\r\n\r\nconst Main = ({ children }) => {\r\n  return (\r\n    <>\r\n      <Header />\r\n      <LeftMenu />\r\n      <main role=\"main\">{children}</main>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Main;\r\n","export const colors = [\r\n  { id: '1', name: \"yellow\", description: \"\", color: \"#ffff00\", rating: [3, 4, 5] },\r\n  { id: '2', name: \"red\", description: \"\", color: \"#ff0000\", rating: [2, 1, 2] },\r\n  { id: '3', name: \"green\", description: \"\", color: \"#008000\", rating: [3, 2, 1] },\r\n]","import { colors } from \"../data/colors\";\r\n\r\nexport default class ColorService {\r\n   static async get() {\r\n      return await new Promise(resolve => setTimeout(() => resolve(colors), 200));\r\n   }\r\n}","import ColorService from \"../../../api/ColorService\";\r\nimport StorageService from \"../../../api/StorageService\";\r\nimport {\r\n  ADD_COLOR,\r\n  EDIT_COLOR,\r\n  REMOVE_COLOR,\r\n  SET_COLORS,\r\n  SET_ERROR,\r\n  SET_ISLOADING,\r\n  SET_RATING,\r\n} from \"./action-types\";\r\n\r\nexport const ColorActionCreators = {\r\n  setColors: (colors) => ({ type: SET_COLORS, payload: colors }),\r\n  setError: (error) => ({ type: SET_ERROR, payload: error }),\r\n  setIsLoading: (isLoading) => ({ type: SET_ISLOADING, payload: isLoading }),\r\n  addColor: (color) => ({ type: ADD_COLOR, payload: color }),\r\n  editColor: (color) => ({ type: EDIT_COLOR, payload: color }),\r\n  removeColor: (id) => ({ type: REMOVE_COLOR, payload: id }),\r\n  setRating: (color) => ({ type: SET_RATING, payload: color }),\r\n  fetchColors: () => async (dispatch) => {\r\n    dispatch(ColorActionCreators.setIsLoading(true));\r\n    setTimeout(async () => {\r\n      try {\r\n        let state = StorageService.get();\r\n        let colors = state?.color?.colors;\r\n        if (!colors || colors.length === 0) {\r\n          colors = await ColorService.get();\r\n          console.log(\"colors not from cash\", { colors });\r\n        } else {\r\n          console.log(\"colors from cash\", { colors });\r\n        }\r\n\r\n        dispatch(ColorActionCreators.setColors(colors));\r\n      } catch (error) {\r\n        dispatch(ColorActionCreators.setError(\"Error occurs when loading\"));\r\n      } finally {\r\n        dispatch(ColorActionCreators.setIsLoading(false));\r\n      }\r\n    }, 3000);\r\n  },\r\n};\r\n","import { SET_ADMIN } from \"./action-types\";\r\n\r\nexport const UserActionCreators = {\r\n   setIsAdmin: (isAdmin) => ({ type: SET_ADMIN, payload: isAdmin }),\r\n }","import { ColorActionCreators } from \"./color/action-creators\";\r\nimport { UserActionCreators } from \"./user/action-creators\";\r\n\r\nexport const allActionCreators = {\r\n   ...ColorActionCreators,\r\n   ...UserActionCreators,\r\n}","import { useMemo } from \"react\";\r\nimport { useLocation } from \"react-router-dom/cjs/react-router-dom.min\";\r\nimport { useDispatch } from 'react-redux';\r\nimport { bindActionCreators } from 'redux';\r\nimport { allActionCreators } from '../store/reducers/action-creators';\r\n\r\nexport function useQuery() {\r\n  const { search } = useLocation();\r\n  return useMemo(() => new URLSearchParams(search), [search]);\r\n}\r\n\r\nexport const useActions = () => {\r\n   const dispatch = useDispatch();\r\n   return bindActionCreators(allActionCreators, dispatch);\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useActions } from \"../hooks\";\r\nimport { RouteNames } from \"../routes\";\r\nimport { Formik, Form, Field, useFormik } from \"formik\";\r\nimport * as Yup from \"yup\";\r\n\r\nconst validationSchema = Yup.object().shape({\r\n  name: Yup.string().min(5, \"Name is too short (>5)!\").required(\"Required\"),\r\n  description: Yup.string().min(10, \"Description is too short (>10)!\").max(300, \"Description is too long(<300)!\"),\r\n  color: Yup.string().required(\"Color is required\"),\r\n});\r\n\r\nconst AddColor = () => {\r\n  const router = useHistory();\r\n  const { addColor } = useActions();\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      name: \"\",\r\n      description: \"\",\r\n      color: \"\",\r\n    },\r\n    validationSchema,\r\n    onSubmit: (values, actions) => {\r\n      addColor(values);\r\n      actions.resetForm();\r\n    },\r\n  });\r\n\r\n  const handleClose = (e) => {\r\n    router.push(RouteNames.COLORS);\r\n  };\r\n\r\n  return (\r\n    <section className=\"gallery-create\">\r\n      <header className=\"gallery-create__header\">\r\n        <h2>Add color</h2>\r\n      </header>\r\n      <form\r\n      onSubmit={formik.handleSubmit}\r\n      className=\"gallery-create__container\"\r\n      >\r\n        <label className=\"form-line\">\r\n          <span>Name:</span>\r\n          <input\r\n            type=\"text\"\r\n            name=\"name\"\r\n            className=\"form-input\"\r\n            placeholder=\"Name\"\r\n            value={formik.values.name}\r\n            onChange={formik.handleChange}\r\n            onBlur={formik.handleBlur}\r\n          />\r\n        </label>\r\n        {formik.touched.name && formik.errors.name ? (\r\n          <div className=\"error\">{formik.errors.name}</div>\r\n        ) : null}\r\n        <div className=\"form-line\">\r\n          <span>Description:</span>\r\n          <textarea\r\n            name=\"description\"\r\n            className=\"form-input\"\r\n            rows=\"10\"\r\n            placeholder=\"Description\"\r\n            value={formik.values.description}\r\n            onChange={formik.handleChange}\r\n            onBlur={formik.handleBlur}\r\n          ></textarea>\r\n        </div>\r\n        {formik.touched.description && formik.errors.description ? (\r\n          <div className=\"error\">{formik.errors.description}</div>\r\n        ) : null}\r\n        <label className=\"form-line\">\r\n          <span>Choose color:</span>\r\n          <input\r\n            type=\"color\"\r\n            name=\"color\"\r\n            className=\"form-input\"\r\n            value={formik.values.color}\r\n            onChange={formik.handleChange}\r\n            onBlur={formik.handleBlur}\r\n          />\r\n        </label>\r\n        {formik.touched.color && formik.errors.color ? (\r\n          <div className=\"error\">{formik.errors.color}</div>\r\n        ) : null}\r\n        <div className=\"items__actions\">\r\n          <button type=\"submit\">Add</button>\r\n          <button type=\"button\" onClick={handleClose}>\r\n            Close\r\n          </button>\r\n        </div>\r\n      </form>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default AddColor;\r\n","export function averageFromArray(array) {\r\n  const length = array?.length;\r\n  let averageRating = 0;\r\n  if (length) {\r\n    averageRating = Math.round(array.reduce((prev, cur) => prev + cur)/length);\r\n  }\r\n  return averageRating;\r\n}\r\n\r\nexport function generateArrayAndReverse(number) {\r\n  return new Array(number)\r\n    .fill(0)\r\n    .map((_, index) => index + 1)\r\n   .reverse();\r\n}\r\n","import { createSelector } from \"reselect\";\r\nimport { averageFromArray } from \"../utils\";\r\n\r\nconst selectColors = (state) => {\r\n  return state.color.colors;\r\n};\r\nconst selectColorId = (state, colorId) => colorId;\r\n\r\nconst selectColorsWithId = createSelector(\r\n  [selectColors],\r\n  (colors) => colors.reduce((acc, color) => ({...acc, [color.id]: color}), {})\r\n);\r\n\r\nconst selectColorById = createSelector(\r\n  [selectColorsWithId, selectColorId],\r\n  (colors, colorId) => {\r\n     return colors[colorId]\r\n  }\r\n);\r\n\r\nconst selectColorsWithAverageRating = createSelector(selectColors, (colors) => {\r\n  return colors.map((color) => {\r\n    const averageRating = averageFromArray(color?.rating);\r\n    return { ...color, averageRating };\r\n  });\r\n});\r\n\r\nconst selectIdColors = createSelector(selectColors, (colors) => {\r\n  return colors.map((color) => color.id);\r\n});\r\n\r\nconst selectColorWithAverageRatingById = createSelector(\r\n  selectColorById,\r\n  (color) => {\r\n    const averageRating = averageFromArray(color?.rating);\r\n    return { ...color, averageRating };\r\n  }\r\n);\r\n\r\nexport {\r\n  selectIdColors,\r\n  selectColorsWithAverageRating,\r\n  selectColorWithAverageRatingById,\r\n};\r\n","import React from \"react\";\r\n\r\nconst Star = ({ id: sid, value, disabled, averageRating, onChange: onChangeParent }) => {\r\n\r\n  const id = `star-${sid}-${value}`;\r\n  const name = `rating${sid}`;\r\n  const title = `Rating «${value}»`;\r\n  const onChange = () => {\r\n   onChangeParent(value);\r\n  };\r\n  return (\r\n    <>\r\n      <input\r\n        type=\"radio\"\r\n        id={id}\r\n        name={name}\r\n        value={value}\r\n        onChange={onChange}\r\n        disabled={disabled}\r\n        checked={averageRating === value}\r\n      />\r\n      <label htmlFor={id} title={title}></label>\r\n    </>\r\n  );\r\n};\r\n\r\nStar.defaultProps = {\r\n  disabled: false,\r\n  onChange: () => {}\r\n};\r\n\r\nexport default Star;\r\n","import classNames from \"classnames\";\r\nimport React from \"react\";\r\n\r\nconst Stars = ({ className, averageRating, children }) => {\r\n  const number = React.Children.count(children);\r\n  const caption = `${averageRating} of ${number} stars`;\r\n  return (\r\n    <div className=\"item__rating\">\r\n      <div className={classNames(className, \"stars\")}>{children}</div>\r\n      <div className=\"items__stars-value\">{caption}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Stars;\r\n","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { useHistory } from \"react-router-dom/cjs/react-router-dom.min\";\r\nimport Star from \"../components/Star\";\r\nimport Stars from \"../components/Stars\";\r\nimport { selectColorWithAverageRatingById } from \"../selectors\";\r\nimport { generateArrayAndReverse } from \"../utils\";\r\n\r\nconst Color = ({ id }) => {\r\n  const isAdmin = useSelector((state) => state.user.isAdmin);\r\n  const { color, name, averageRating } = useSelector((state) =>\r\n    selectColorWithAverageRatingById(state, id)\r\n  );\r\n  const router = useHistory();\r\n  const onClick = (e) => {\r\n    e.stopPropagation();\r\n    if (isAdmin) {\r\n      router.push(`/color/${id}?role=admin`);\r\n    } else {\r\n      router.push(`/color/${id}`);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <article className=\"gallery__col\">\r\n      <div className=\"gallery__item item\" onClick={onClick}>\r\n        <div className=\"item__name\" data-name={name} style={{ color }}>\r\n          {name}\r\n        </div>\r\n        <div className=\"item__color-block\" style={{ background: color }}></div>\r\n\r\n        <Stars\r\n          className=\"item__stars\"\r\n          averageRating={averageRating}\r\n          onClick={(e) => {\r\n            e.stopPropagation();\r\n          }}\r\n        >\r\n          {generateArrayAndReverse(5).map((value) => (\r\n            <Star\r\n              key={value}\r\n              value={value}\r\n              disabled\r\n              averageRating={averageRating}\r\n              id={id}\r\n            />\r\n          ))}\r\n        </Stars>\r\n      </div>\r\n    </article>\r\n  );\r\n};\r\n\r\nexport default Color;\r\n","import React, { useEffect } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { useActions } from \"../hooks\";\r\nimport { selectIdColors } from \"../selectors\";\r\nimport Color from \"./Color\";\r\n\r\nconst Colors = () => {\r\n  const { setIsAdmin } = useActions();\r\n\r\n  const isAdmin = useSelector((state) => state.user.isAdmin);\r\n  const { isLoading, error } = useSelector((state) => state.color);\r\n\r\n  const handleClick = () => {\r\n    setIsAdmin(!isAdmin);\r\n  };\r\n  const colors = useSelector(selectIdColors);\r\n\r\n  return (\r\n    <section className=\"gallery\">\r\n      <header className=\"gallery__header\">\r\n        <h2>Colors list</h2>\r\n      </header>\r\n      <button\r\n        onClick={handleClick}\r\n        style={{ marginRight: \"auto\", marginBottom: \"20px\" }}\r\n      >\r\n        {isAdmin ? \"Try User\" : \"Try Admin\"}\r\n      </button>\r\n      {isLoading ? (\r\n        <div>Loading ...</div>\r\n      ) : error ? (\r\n        <div>Some error appears. Reload please!</div>\r\n      ) : (\r\n        <div className=\"gallery__row\">\r\n          {colors.map((id) => (\r\n            <Color key={id} id={id} />\r\n          ))}\r\n        </div>\r\n      )}\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Colors;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Error = () => {\r\n  return (\r\n    <section className=\"error-page\">\r\n      <header className=\"gallery-create__header\">\r\n        <h2>Unknown page</h2>\r\n      </header>\r\n      <h2>Unknown page</h2>\r\n      <Link to=\"/\">Go to the main page</Link>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Error;\r\n","import classNames from \"classnames\";\r\nimport React, { useState } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport Star from \"../components/Star\";\r\nimport Stars from \"../components/Stars\";\r\nimport { useActions, useQuery } from \"../hooks\";\r\nimport { RouteNames } from \"../routes\";\r\nimport { selectColorWithAverageRatingById } from \"../selectors\";\r\nimport { generateArrayAndReverse } from \"../utils\";\r\n\r\nconst initialState = { name: \"\", description: \"\", color: \"\", rate: \"\" };\r\n\r\nconst UpdateColor = () => {\r\n  const query = useQuery();\r\n  const isAdmin = query.get(\"role\") === \"admin\";\r\n  const { id } = useParams();\r\n\r\n  const savedState = useSelector((state) =>\r\n    selectColorWithAverageRatingById(state, id)\r\n  );\r\n\r\n  const [state, setState] = useState({ ...initialState, ...savedState });\r\n  const router = useHistory();\r\n  const { editColor, removeColor, setRating } = useActions();\r\n\r\n  const onChangeState = ({ target: { name, value } }) => {\r\n    setState((prev) => ({ ...prev, [name]: value }));\r\n  };\r\n\r\n  const onChangeRating = (value) => {\r\n    setState((prev) => ({ ...prev, rate: value }));\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    editColor(state);\r\n  };\r\n\r\n  const handleClose = (e) => {\r\n    router.push(RouteNames.COLORS);\r\n  };\r\n\r\n  const handleDelete = (e) => {\r\n    e.preventDefault();\r\n    const replyYes = window.confirm(\"The color will be removed. Continue ?\");\r\n    if (replyYes) {\r\n      removeColor(id);\r\n    }\r\n    router.push(RouteNames.COLORS);\r\n  };\r\n\r\n  return (\r\n    <section className=\"gallery-update gallery-update__container\">\r\n    <header className=\"gallery-update__header\">\r\n      <h2>Update color</h2>\r\n    </header>\r\n    <form\r\n      className=\"gallery-create gallery-create__container\"\r\n      onSubmit={handleSubmit}\r\n    >\r\n      <label className=\"form-line\">\r\n        <span>Name:</span>\r\n        <input\r\n          type=\"text\"\r\n          name=\"name\"\r\n          className=\"form-input\"\r\n          placeholder=\"Name\"\r\n          value={state.name}\r\n          onChange={onChangeState}\r\n        />\r\n      </label>\r\n      <div className=\"form-line\">\r\n        <span>Description:</span>\r\n        <textarea\r\n          name=\"description\"\r\n          className=\"form-input\"\r\n          rows=\"10\"\r\n          placeholder=\"Description\"\r\n          value={state.description}\r\n          onChange={onChangeState}\r\n        ></textarea>\r\n      </div>\r\n      <label className=\"form-line\">\r\n        <span>Choose color:</span>\r\n        <input\r\n          type=\"color\"\r\n          name=\"color\"\r\n          className=\"form-input\"\r\n          value={state.color}\r\n          onChange={onChangeState}\r\n        />\r\n      </label>\r\n\r\n      <Stars\r\n        className=\"item__stars\"\r\n        averageRating={state.averageRating}\r\n        onClick={(e) => {\r\n          e.stopPropagation();\r\n        }}\r\n      >\r\n        {generateArrayAndReverse(5).map((value) => (\r\n          <Star\r\n            key={value}\r\n            value={value}\r\n            averageRating={!isAdmin ? state.rate : state.averageRating}\r\n            onChange={onChangeRating}\r\n            disabled={isAdmin}\r\n            id={id}\r\n          />\r\n        ))}\r\n      </Stars>\r\n\r\n      <div className=\"items__actions\">\r\n        <button type=\"submit\">Save</button>\r\n        <button type=\"button\"\r\n          onClick={handleDelete}\r\n          className={classNames({ hidden: !isAdmin })}\r\n        >\r\n          Delete\r\n        </button>\r\n        <button type=\"button\" onClick={handleClose}>Close</button>\r\n      </div>\r\n    </form>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default UpdateColor;\r\n","import Main from \"../layouts/Main\";\r\nimport AddColor from \"../pages/AddColor\";\r\nimport Colors from \"../pages/Colors\";\r\nimport Error from \"../pages/Error\";\r\nimport UpdateColor from \"../pages/UpdateColor\";\r\n\r\nexport const RouteNames = {\r\n  COLORADMIN: \"/color/:id?role=admin\",\r\n  COLOR: \"/color/:id\",\r\n  COLORS: \"/\",\r\n  ADDCOLOR: \"/add\",\r\n};\r\n\r\nconst ColorsWithMain = () => (\r\n  <Main>\r\n    <div className=\"content\">\r\n      <Colors />\r\n    </div>\r\n  </Main>\r\n);\r\nconst UpdateColorWithMain = () => (\r\n  <Main>\r\n    <div className=\"content\">\r\n      <UpdateColor />\r\n    </div>\r\n  </Main>\r\n);\r\nconst ErrorWithMain = () => (\r\n  <Main>\r\n    <div className=\"content\">\r\n      <Error />\r\n    </div>\r\n  </Main>\r\n);\r\n\r\nconst AddColorWithMain = () => (\r\n  <Main>\r\n    <div className=\"content\">\r\n      <AddColor />\r\n    </div>\r\n  </Main>\r\n);\r\n\r\nexport const publicRoutes = [\r\n  {\r\n    id: RouteNames.COLORS,\r\n    path: RouteNames.COLORS,\r\n    render: ColorsWithMain,\r\n    exact: true,\r\n  },\r\n  {\r\n    id: RouteNames.COLOR,\r\n    path: RouteNames.COLOR,\r\n    render: UpdateColorWithMain,\r\n    exact: true,\r\n  },\r\n  {\r\n    id: RouteNames.COLORADMIN,\r\n    path: RouteNames.COLORADMIN,\r\n    render: UpdateColorWithMain,\r\n    exact: true,\r\n  },\r\n  {\r\n    id: RouteNames.ADDCOLOR,\r\n    path: RouteNames.ADDCOLOR,\r\n    render: AddColorWithMain,\r\n    exact: true,\r\n  },\r\n   { id: \"/error\", render: ErrorWithMain, exact: true },\r\n];\r\n\r\nexport const privateRoutes = [];\r\n","import { Switch, Route, Redirect } from \"react-router-dom\";\r\nimport React from \"react\";\r\nimport { publicRoutes, RouteNames } from \"../routes\";\r\n\r\nconst AppRouter = () => {\r\n  return (\r\n    <Switch>\r\n      {publicRoutes.map((route) => (\r\n        <Route {...route} key={route.id} />\r\n      ))}\r\n      <Redirect to={RouteNames.COLORS} />\r\n    </Switch>\r\n  );\r\n};\r\n\r\nexport default AppRouter;\r\n","import React from 'react';\nimport 'normalize.css';\nimport './style.css';\nimport AppRouter from './components/AppRouter';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n         <AppRouter />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter } from 'react-router-dom';\nimport {store} from './store';\nimport App from \"./App\";\nimport {allActionCreators} from './store/reducers/action-creators'\n\nstore.dispatch(allActionCreators.fetchColors());\n\nReactDOM.render(\n<Provider store={store}>\n   <BrowserRouter>\n      <App />\n   </BrowserRouter>\n</Provider>,\n   document.getElementById(\"root\"));"],"sourceRoot":""}